#!/usr/bin/env node
/*
 *  GraVITas Premier League <gravitaspremierleague@gmail.com>
 *  Copyright (C) 2014  IEEE Computer Society - VIT Student Chapter <ieeecs@vit.ac.in>
 *
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

console.time("sim-controller");

var day,
	path = require("path").join,
	mongo = require("mongodb").MongoClient.connect,
	mongoTeam = require(path(__dirname, "..", "database", "mongoTeam")),
	simControl = require(path(__dirname, "..", "worker", "simController")),
	ref =
	{
		users: "round2",
		round2: "round3"
	},
	op = {};

if (process.env.NODE_ENV)
{
	var Heroku = require("heroku-client"), // eslint-disable-line global-require
		configure = new Heroku({ token: process.env.HEROKU_API_TOKEN })
					.apps(process.env.HEROKU_APP_NAME).configVars().update;
}
else
{
	require("dotenv").load({ path: path(__dirname, "..", ".env") }); // eslint-disable-line global-require
}

day = parseInt(process.argv[2] || process.env.DAY, 10);

if (!day)
{
	throw new Error("Please enter the match day number (1-7) as an argument");
}

mongo(process.env.MONGO, function (er, db) {
	if (er)
	{
		throw er;
	}

	global.database = db;

	simControl.initSimulation(day, function () {
		console.log(`Simulation of Matches for Day ${day} is complete`);

		op.MATCH = ref[process.env.MATCH] || "round3";

		if (!process.argv[2] || process.env.DAY === process.argv[2])
        {
			op.DAY = ((day + 1) % 8) || (process.env.DAY === "round3" ? 7 : 0);
		}

		if (day === 7 && process.env.MATCH !== "round3")
        {
			mongoTeam.shortlist(function (err) {
				if (err)
                {
					console.error(err.message);
				}

				configure(op, function (error) {
					if (error)
                    {
						console.error(error.message);
					}

					global.database.close();
					console.timeEnd("sim-controller");
				});
			});
		}
		else
        {
			global.database.close();
			console.timeEnd("sim-controller");
		}
	});
});
