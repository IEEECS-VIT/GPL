/*
 *  GraVITas Premier League <gravitaspremierleague@gmail.com>
 *  Copyright (C) 2014  IEEE Computer Society - VIT Student Chapter <ieeecs@vit.ac.in>
 *
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

var log;
var server;
var path = require('path');
var debug = require('debug')('GPL');
var mongo = require('mongodb').MongoClient.connect;
var app = require(path.join(__dirname, '..', 'app'));
var mongoUri = process.env.MONGO || 'mongodb://127.0.0.1:27017/GPL';

if (process.env.NEWRELIC_APP_NAME && process.env.NEWRELIC_LICENSE)
{
    require('newrelic');
}

if (process.env.LOGENTRIES_TOKEN)
{
    var logentries = require('node-logentries');
    log = logentries.logger({
                                token: process.env.LOGENTRIES_TOKEN
                            });
}

app.set('port', process.env.PORT || 3000);

var onBind = function ()
{
    if (log)
    {
        log.log('info', {MongoUri: mongoUri, Port: server.address().port});

        if (process.env.HOSTNAME)
        {
            log.log('info', {Application: process.env.HOSTNAME});
        }
    }

    debug('Node.js Express server listening on port ' + server.address().port);
    debug('Using MongoDB: ' + mongoUri);

    if (process.env.HOSTNAME)
    {
        debug(process.env.HOSTNAME);
    }
};

mongo(mongoUri, function(err, database){
    if(err)
    {
        throw err;
    }

    db = database;
    server = app.listen(app.get('port'), onBind);
});

process.on('SIGINT', function(err){
    if(err)
    {
        console.log(err.message);
    }

    db.close();
    process.exit(0);
});